@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@model _300825160_Perroni__300930438__Lemos__Lab2.Models.Movie

@{
    ViewData["Title"] = "Details";
}

<h2>Details</h2>

<div>
    <h4>Movie</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Sinopsis)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Sinopsis)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Genre)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Genre)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.ReleaseDate)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.ReleaseDate)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Duration)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Duration)
        </dd>
    </dl>
</div>
<div>
    @{  var user = await UserManager.FindByIdAsync(UserManager.GetUserId(User));
        var roles = await UserManager.GetRolesAsync(user);
        if (UserManager.GetUserId(User) == Model.UserMovie.FirstOrDefault().UserId || roles.FirstOrDefault() == "Admin")
        {
            <a asp-action="Delete" class="btn btn-danger" asp-route-id="Model.Id"><i class="fas fa-trash"></i> Delete</a> <span>|</span>
            <a asp-action="Edit" class="btn btn-warning" asp-route-id="@Model.Id"><i class="fas fa-edit"></i> Edit</a> <span>|</span>
        }
    }
    <a asp-action="GetMovieAsync" class="btn btn-success" asp-route-id="@Model.Id"><i class="fas fa-download"></i>  Download Movie</a> |
    <a asp-action="Index" class="btn"><i class="fas fa-chevron-circle-left"></i> Back to List</a>
</div>
